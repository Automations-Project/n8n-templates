{
  "name": "Coolify Workflows to backup & update n8n automatically",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "id": "101058dd-10e9-413a-a27b-25ac60cefd89",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        940,
        -320
      ]
    },
    {
      "parameters": {
        "url": "=https://api.n8n.io/api/versions/{{ $json[\"Current Version\"] }}",
        "options": {}
      },
      "id": "d18a90c3-519d-4486-991c-d371f6de875b",
      "name": "Check update",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2040,
        -240
      ]
    },
    {
      "parameters": {
        "command": "n8n export:credentials --all --decrypted"
      },
      "id": "10b2017a-e0fb-43e2-80d2-ec7f53cb0dd1",
      "name": "Export credentials",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1680,
        60
      ]
    },
    {
      "parameters": {
        "command": "n8n export:workflow --all"
      },
      "id": "22182802-28a3-40a9-8a47-2ad7d64b2448",
      "name": "Export Workflows",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        2240,
        60
      ]
    },
    {
      "parameters": {
        "amount": 2,
        "unit": "minutes"
      },
      "id": "bdc674cb-5f46-4637-92d4-d4e3ada269d9",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        2340,
        300
      ],
      "webhookId": "5e3da657-901b-4f74-804b-d469d879b6bc",
      "notesInFlow": true,
      "notes": "Waiting 5 Minutes"
    },
    {
      "parameters": {
        "url": "={{ $('Config Node').item.json[\"Coolify webhook URL\"].match(/(?:https?:\\/\\/)?([^\\/]+)\\/api\\/v([^\\/?]+)\\/([^\\/?]+)/)[0] }}?uuid={{ $('Config Node').item.json[\"Coolify webhook URL\"].match(/uuid=([^&]+)/)[1] }}&force=true",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "={{ $('Config Node').item.json[\"Coolify API Token\"] }}"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true,
          "redirect": {
            "redirect": {}
          },
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "d52ff84a-7fa4-4db9-9265-02adb41e2be1",
      "name": "Update N8N Docker",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2100,
        300
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Config Node').item.json['telegram chat id'] }}",
        "text": "=<b>üéâ New Update for N8N! üöÄ</b>\n\nüîπ <b>Your current version is</b>: {{ '<code>V'+$('CLI Check Version').item.json.stdout+'</code>' }} üìå \nüîπ <b>Available Update</b>: {{ '<code>V'+$('Check update').item.json.name+'</code>' }} ‚ú®\nüìÖ <b>Release data</b>:  {{ '<code>'+DateTime.fromISO($node[\"Check update\"].json[\"createdAt\"]).toFormat('MMMM dd, yyyy, hh:mm a')+'</code>' }}\nüìù <b>The new update description is</b>:-\n\n <blockquote>{{ $('Check update').item.json.description }} üìÑ</blockquote>\n\nCurrently N8N doing auto backup to your data and send it here.",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "={{ `Read more about V` + $('Check update').item.json.name }}",
                    "additionalFields": {
                      "url": "={{ $('Check update').item.json.documentationUrl }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "disable_web_page_preview": true,
          "parse_mode": "HTML"
        }
      },
      "id": "bf12ee3c-b5c1-4c03-8ebc-264e3beadb54",
      "name": "Step1 Notify",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1520,
        60
      ],
      "notesInFlow": true,
      "credentials": {
        "telegramApi": {
          "id": "CqV7dvKZAmqqZXHr",
          "name": "MyCoolifyBot"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendDocument",
        "chatId": "={{ $('Config Node').item.json['telegram chat id'] }}",
        "binaryData": true,
        "additionalFields": {
          "caption": "=This is your credentials decrypted for version {{ '<code>V'+$('CLI Check Version').item.json.stdout+'</code>' }} Keep it safe! üîê\n\nDate: {{ DateTime.fromISO($now).toFormat('MMMM dd, yyyy, hh:mm a') }}\n\nNext step: Backup workflows.",
          "parse_mode": "HTML"
        }
      },
      "id": "295f4f3d-e42b-412e-83a7-e22908b7f04f",
      "name": "Step2 Notify ",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2100,
        60
      ],
      "credentials": {
        "telegramApi": {
          "id": "CqV7dvKZAmqqZXHr",
          "name": "MyCoolifyBot"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendDocument",
        "chatId": "={{ $('Config Node').item.json['telegram chat id'] }}",
        "binaryData": true,
        "additionalFields": {
          "caption": "=üîí This is your workflows decrypted for version {{ 'V'+$('CLI Check Version').item.json.stdout+'' }}. Keep it safe! üîê\n\nüìÖ Date: {{ DateTime.fromISO($now).toFormat('MMMM dd, yyyy, hh:mm a') }} üóìÔ∏è\n\nüöÄ Next step: Buckle up and get ready to update N8N to version {{ 'V'+$('Check update').item.json.name+'' }}! üåü Hold on tight as the server takes a quick nap for about a minute. üò¥ If everything goes smoothly, you can sit back and relax. But, if you don't see the N8N URL working within 5 minutes, well... you might want to consider calling the ambulance! üöë\n\nEnjoy the ride and happy updating! üòÑ‚ú®",
          "parse_mode": "HTML"
        }
      },
      "id": "ced525e1-b7fd-4c4e-8930-b3ab75d39272",
      "name": "Step3 Notify ",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2660,
        60
      ],
      "notesInFlow": true,
      "credentials": {
        "telegramApi": {
          "id": "CqV7dvKZAmqqZXHr",
          "name": "MyCoolifyBot"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Config Node').item.json['telegram chat id'] }}",
        "text": "=üì¢ Update Complete! üéâ\n\nüåü Congratulations on successfully updating N8N to version {{ ('<code>V'+$('Check update').item.json.name+'</code>') || '' }}! üöÄ‚ú®\n\nThe server is up and running smoothly again. üèÉ‚Äç‚ôÇÔ∏èüí® Feel free to dive back into your workflows and enjoy the latest features and enhancements. üéâ",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "6ba969a6-9a9b-47bf-9a17-6bd3b6cf2e4d",
      "name": "Step4 Notify (Final)",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2620,
        300
      ],
      "credentials": {
        "telegramApi": {
          "id": "CqV7dvKZAmqqZXHr",
          "name": "MyCoolifyBot"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "=There's Error with sending backup files. check the workflow {{ $workflow.name }} telegram fileds if everything okay, post an issue in community.n8n.io with mention the creator of template."
      },
      "id": "b8d2159d-10ae-433e-bcea-ea4ece2b0f16",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1840,
        360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "80c3a935-8b28-40cf-9b43-854b0ae81a1d",
              "leftValue": "={{ $json.name }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "364c15d7-3916-4d75-bd59-12ca1cc4a3de",
              "leftValue": "={{ $('Current Version').item.json[\"Current Version\"] }}",
              "rightValue": "={{ $json.name }}",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "dc2f9339-bcc2-43ad-ac4c-957e7a2ac33c",
      "name": "New Update ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2180,
        -240
      ]
    },
    {
      "parameters": {},
      "id": "d69d2337-a1b5-449c-af98-e7ce141bcfcc",
      "name": "Keep newest one",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        2360,
        -180
      ]
    },
    {
      "parameters": {
        "content": "## üîÑChecking Version (Stable Version Only)",
        "height": 347.2010728253663,
        "width": 995,
        "color": 4
      },
      "id": "fc5995d4-9776-4fdf-b60f-e9ff1a6666a7",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1500,
        -366.2010728253663
      ]
    },
    {
      "parameters": {
        "content": "## ‚ö†Ô∏èBackup",
        "height": 244.00882504495965,
        "width": 1282.25,
        "color": 3
      },
      "id": "daf3744f-06c6-4256-8a80-07ff2e39b700",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1500,
        -12.00882504495965
      ]
    },
    {
      "parameters": {
        "content": "## üö™Workflow END\n_In future versions, we can enhance this section to include daily warnings and audits of N8N iinstance and send them to Telegram._",
        "height": 349.29278419309003,
        "width": 281
      },
      "id": "2848f830-bcc3-497b-894e-3da34b039054",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2500,
        -367.29278419309003
      ]
    },
    {
      "parameters": {
        "content": "## üîÑUpdate & Deploy",
        "height": 257,
        "width": 1286.5,
        "color": 4
      },
      "id": "6b54afc8-269e-4cfd-ae49-3d831660cb89",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1497.5,
        240
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "stringValue": "={{ $json.stdout }}"
            }
          ]
        },
        "include": "none",
        "options": {}
      },
      "id": "bfc53b83-b2f1-4411-9401-37e3cf97b4a1",
      "name": "credentials",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        1820,
        60
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "stringValue": "={{ $json.stdout }}"
            }
          ]
        },
        "include": "none",
        "options": {}
      },
      "id": "15048603-e279-4402-b5c5-88adf575afd2",
      "name": "Workflows",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        2380,
        60
      ]
    },
    {
      "parameters": {
        "operation": "toJson",
        "options": {
          "encoding": "utf8",
          "fileName": "workflows.json"
        }
      },
      "id": "20c092a4-b475-411b-a944-cbb3c3c95671",
      "name": "Workflows.json",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1,
      "position": [
        2520,
        60
      ]
    },
    {
      "parameters": {
        "operation": "toJson",
        "options": {
          "encoding": "utf8",
          "fileName": "credentials.json"
        }
      },
      "id": "7ace16fb-4501-4aea-abc5-3bbf9176f5d8",
      "name": "Credentials.json",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1,
      "position": [
        1960,
        60
      ]
    },
    {
      "parameters": {
        "content": "## üß† Starting Stack\n\n‚Äå\n‚Äå\n‚Äå\n‚Äå\n‚Äå\n‚Äå\n‚Äå\n## üõ† Configuration Instructions\n\n**Ensure to properly set up the `Config Node` with the required details:**\n\n- **Telegram Chat ID:** Your unique Telegram identifier.\n\n- **Coolify Webhook URL:**\n  - Navigate to your Coolify project.\n  - Go to `Configuration` > `Webhooks`.\n  - Copy the Webhook URL.\n\n  **URL Format:** `https://yourdomain.tld/api/v1/deploy?uuid=yourUUID&force=false`\n\n- **Coolify API Token:**\n  - Access the Coolify dashboard.\n  - Select `Security` > `API Tokens`.\n  - Generate or copy your API token.\n\n  **Token Format:** `Bearer 1|bBx6dwcuY4IL05SxDvUjfFs547vOgZOJTx3Fp95rd76ff2dc`\n\nFor further details, consult the [Coolify Documentation](https://coolify.io/docs/api/authentication).\n\n*Accuracy in these configurations is crucial for the workflow's functionality.*\n\n\n- **Please Note**:-\nWith `CLI Mode` There's no need to setup N8N Instance host. `This workflow template tested on Hetzner Server with Coolify V4 & N8N 1.26.0 using this` [configuration](https://n8n.nskha.com/?page=2da9583d-5663-416c-a52b-84c20924e8e6)",
        "height": 867.757111289927,
        "width": 593.0470569201318
      },
      "id": "de5408eb-bf70-4672-8aa7-008f222fe152",
      "name": "Enhanced Configuration Guide",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        900,
        -369.47620692853695
      ]
    },
    {
      "parameters": {
        "command": "n8n --version"
      },
      "id": "22ccc538-04b5-48dc-a534-99b3d2c9233b",
      "name": "CLI Check Version",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1580,
        -300
      ]
    },
    {
      "parameters": {
        "url": "=https://{{ $item(\"0\").$node[\"Config Node\"].json[\"N8N Instance (domain or IP:PORT)\"] }}/rest/settings",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json, text/plain, */*"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "sessionid",
              "value": "fwstbgvkd4"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0"
            },
            {
              "name": "DNT",
              "value": "1"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Referer",
              "value": "=https://{{ $item(\"0\").$node[\"Config Node\"].json[\"N8N Instance (domain or IP:PORT)\"] }}/settings/usage"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "empty"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "cors"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "Sec-GPC",
              "value": "1"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "TE",
              "value": "trailers"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true,
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "9c697996-1882-4529-aaf5-2795cae38ba9",
      "name": "HTTP Check Version",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1580,
        -160
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "data.versionCli"
            },
            {
              "fieldToAggregate": "stdout"
            }
          ]
        },
        "options": {}
      },
      "id": "b2e4f59f-819a-4636-98e5-7605857b9069",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1760,
        -240
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Current Version",
              "stringValue": "={{ $('Aggregate').item.json.stdout[0] || $('Aggregate').item.json.versionCli[0] }}"
            }
          ]
        },
        "include": "none",
        "options": {}
      },
      "id": "148dcca4-97b1-473e-82c7-428765b91f1c",
      "name": "Current Version",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        1900,
        -240
      ]
    },
    {
      "parameters": {},
      "id": "71eab6cf-0129-43e9-ba67-ad671ba07d24",
      "name": "No Operation",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2580,
        -220
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Working Method (CLI choose 1 - HTTP chose 2)",
              "type": "numberValue",
              "numberValue": "1"
            },
            {
              "name": "N8N Instance (domain or IP:PORT)",
              "stringValue": "<Your Instance HOST -- Only for HTTP method>"
            },
            {
              "name": "telegram chat id",
              "stringValue": "<Your Telegram Chat ID Here>"
            },
            {
              "name": "Coolify webhook URL",
              "stringValue": "<Your Coolify Container Webhook URL Here>"
            },
            {
              "name": "Coolify API Token",
              "stringValue": "<Your Coolify API Including Bearer Here>"
            }
          ]
        },
        "options": {}
      },
      "id": "c4edb0d7-b8c8-4ffc-ad5e-1524418f1edf",
      "name": "Config Node",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        1140,
        -320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b7cc519c-aef2-422a-9721-9acf332c31e3",
              "leftValue": "={{ $json['Working Method (CLI choose 1 - HTTP chose 2)'] }}",
              "rightValue": 2,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "8e4c4098-3810-4c71-a4e8-0210e6a7e763",
      "name": "CLI or HTTP",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1340,
        -320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "042d1800-392d-48be-9ad5-9dcba11fdc2c",
              "leftValue": "={{ $item(\"0\").$node[\"Step2 Notify \"].json[\"ok\"] }}",
              "rightValue": "ok",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "c3da1e84-b3d5-4ba7-a695-3f48ea662207",
              "leftValue": "={{ $item(\"0\").$node[\"Step3 Notify \"].json[\"ok\"] }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "75b97439-183f-4b0f-a2f3-01aea0c05301",
      "name": "Checking if files backed up üëÜ ",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1540,
        320
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Config Node",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Export credentials": {
      "main": [
        [
          {
            "node": "credentials",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Export Workflows": {
      "main": [
        [
          {
            "node": "Workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Step4 Notify (Final)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Step1 Notify": {
      "main": [
        [
          {
            "node": "Export credentials",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Step2 Notify ": {
      "main": [
        [
          {
            "node": "Export Workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Step3 Notify ": {
      "main": [
        [
          {
            "node": "Checking if files backed up üëÜ ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update N8N Docker": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Step4 Notify (Final)": {
      "main": [
        [
          {
            "node": "No Operation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "New Update ?": {
      "main": [
        [
          {
            "node": "Keep newest one",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Keep newest one": {
      "main": [
        [
          {
            "node": "Step1 Notify",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "credentials": {
      "main": [
        [
          {
            "node": "Credentials.json",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Workflows": {
      "main": [
        [
          {
            "node": "Workflows.json",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Workflows.json": {
      "main": [
        [
          {
            "node": "Step3 Notify ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Credentials.json": {
      "main": [
        [
          {
            "node": "Step2 Notify ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CLI Check Version": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Check Version": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Current Version",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Current Version": {
      "main": [
        [
          {
            "node": "Check update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check update": {
      "main": [
        [
          {
            "node": "New Update ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Config Node": {
      "main": [
        [
          {
            "node": "CLI or HTTP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CLI or HTTP": {
      "main": [
        [
          {
            "node": "CLI Check Version",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Check Version",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Checking if files backed up üëÜ ": {
      "main": [
        [
          {
            "node": "Update N8N Docker",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "timezone": "Europe/Istanbul",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": -1
  },
  "versionId": "fcd4438a-1e57-4902-b53e-92ce994e0685",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "56d2f4e489ee5971b498fdc86622af934b4f6de5339e9825a61dbe25e604dccd"
  },
  "id": "sbx56i4RwukDTEPB",
  "tags": [
    {
      "createdAt": "2023-11-06T18:30:03.320Z",
      "updatedAt": "2023-11-06T18:30:03.320Z",
      "id": "5MnRP7bY5oYBlnoW",
      "name": "Core"
    },
    {
      "createdAt": "2023-11-08T13:43:23.726Z",
      "updatedAt": "2023-11-08T13:43:23.726Z",
      "id": "nlp22NtXuInhUcnd",
      "name": "Database"
    },
    {
      "name": "Nskha",
      "id": "FElyTMYDfQbYKMo3",
      "createdAt": "2024-01-29T19:05:28.044Z",
      "updatedAt": "2024-01-29T19:05:28.044Z"
    }
  ]
}